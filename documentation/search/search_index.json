{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Overview Ryan Sander , Graduate Student @ MIT This guide serves to provide users with efficient access to a variety of different concepts and practical problem/solution discussions in the fields of: Computer Science & Programming Electrical Engineering Economics Mathematics Leadership Writing If you would like to learn more about (a growing list of) these concepts in-depth or would like to practice them, please check out my GitHub repository here. This guide is by no means complete and is routinely updated. My hope is that in its current state, this guide provides you with valuable insight into concepts and implementations for your projects in the aforementioned fields. WARNING : This guide is not intended for commercial use, and should not be redistributed for profit. I have made efforts to make citations where they are due, but a few may still be missing. NOTE : This website is currently under construction, but more content will be coming soon :) Technical Tools Guide The first section of this guide is designed to provide users with access to pertinent information, usage guides, and bug resolutions for a variety of different technical tools. Operating Systems: Linux: Ubuntu (16.04/18.04) RHEL/CentOS Windows (more coming soon) ROS Python: Native Python: os (operating system) argparse (argument parsing) re (regular expressions) json (create/process json files) tarball (create/process tarball files) h5py (create/process h5 files) TensorFlow (Deep Learning + Numerical Computing): TensorFlow TensorBoard (plotting) Keras (high-level TensorFlow API) TensorFlow-Agents (Reinforcement Learning in TensorFlow) PyTorch (Deep Learning + Numerical Computing): PyTorch TensorBoard (plotting) Torchvision (Computer Vision with PyTorch) Points3D (coming soon - 3D Computer Vision in PyTorch) OpenCV (Computer Vision) NumPy (Numerical Programming Package) Xvfb (Headless rendering) OpenAI Gym (Reinforcement Learning Simulations) car-racing Vizdoom Matplotlib (Matlab-based plotting functions) Pyglet (Graphics, animations, and applications) Pandas (Data Analysis, Processing, and Manipulation) SciPy (Scientific Programming Functions) Scikit-Learn (Supervised and unsupervised machine learning) Rospy (coming soon) General Programming Practices Miscellaneous Pomegranate Librosa pymed (coming soon) Shrink PDFs with command-line (coming soon) Performance Engineering: C++ Overview of C++ Roscpp (more coming soon) Performance Optimization for Machine Learning IDEs: PyCharm Vim Interpreters: Bash (coming soon) Jupyter/Jupytext Scientific Computing: Matlab Stata R (coming soon) *Julia Native Julia Gen (probabilistic programming) Web Development: HTML (coming soon) Server Side Includes (SSI) SSL Keys Nginx JavaScript NodeJS Node Package Manager (npm) PostGreSQL Online Tools: Digital Ocean Wix SquareSpace Cloud Computing and Containerization: Cloud Services: Amazon Web Services (AWS) Elastic Compute Cloud (EC2) Boto3 (Python EC2 API) S3 awscli (AWS command-line interface) Google Cloud Compute (GC2) Microsoft Azure (coming soon) MIT Satori (coming soon) MIT SuperCloud Docker Other Tools: Google Suite (Drive, Chrome) LaTeX GitHub Automated Emails (using Python) GitHub repository PowerPoint Labs (coming soon) Google Drive Remote tools (coming soon): Zoom (coming soon) AWW (whiteboard app) (coming soon) Anydesk (coming soon) Cocalc (coming soon) - link WebEx (coming soon) Skype (coming soon) Google Colab (coming soon) PuTTy (coming soon) Technical Concepts Guide Additionally, the latter component of this guide is meant to serve as a high-level resource/guide to concepts in: Artificial intelligence: Machine Learning Types of Learning: Supervised Learning Unsupervised Learning Neural Networks: General PyTorch Supervised Neural Network Training Process Computer Vision PyTorch Supervised Neural Network Training Process Deep generative Models - GANs + VAE Temporal Convolution Networks Machine Learning Domains: Computer Vision Reinforcement Learning Natural Language Processing Feature Engineering General AI: Adversarial Search Game Theory Constraint Satisfaction Problems (CSPs) Embodied Intelligence Robotics: Search Algorithms Particle Filtering SLAM *Probabilistic Inference: * Bayesian and Probabilistic Algorithms * Inference: ADVI, MCMC, GPs, Bayesian Optimization * Probabilistic Programming (using Gen ) Mathematics: Real analysis Fourier Analysis Linear Algebra (coming soon) Multivariable Calculus (coming soon) Differential Equations (coming soon) Computer Science: Algorithms and data structures Software construction (coming soon) Computer graphics (coming soon) Signal Processing: Deterministic and stochastic signal processing Filtering Fourier, Laplace, and Z-Transforms Electromagnetics (coming soon) Economics: Econometrics: Regression Techniques Inference Tests Data Types/Datasets in Econometrics Time Series Analysis Microeconomics Research, Management, and Operations: General topics in research Neural Network Diagram tool Peer Review techniques (coming soon) Computer Science Real Analysis Leadership (coming soon) Project Engineering System Dynamics and Systems Thinking DevOps Research Papers (for machine learning) Datasets (for machine learning) Other Topics: Giving Feedback Diversity and Inclusion \u201cThe Art of the Career\u201d","title":"Home"},{"location":"#overview","text":"","title":"Overview"},{"location":"#ryan-sander-graduate-student-mit","text":"This guide serves to provide users with efficient access to a variety of different concepts and practical problem/solution discussions in the fields of: Computer Science & Programming Electrical Engineering Economics Mathematics Leadership Writing If you would like to learn more about (a growing list of) these concepts in-depth or would like to practice them, please check out my GitHub repository here. This guide is by no means complete and is routinely updated. My hope is that in its current state, this guide provides you with valuable insight into concepts and implementations for your projects in the aforementioned fields. WARNING : This guide is not intended for commercial use, and should not be redistributed for profit. I have made efforts to make citations where they are due, but a few may still be missing. NOTE : This website is currently under construction, but more content will be coming soon :)","title":"Ryan Sander, Graduate Student @ MIT"},{"location":"#technical-tools-guide","text":"The first section of this guide is designed to provide users with access to pertinent information, usage guides, and bug resolutions for a variety of different technical tools. Operating Systems: Linux: Ubuntu (16.04/18.04) RHEL/CentOS Windows (more coming soon) ROS Python: Native Python: os (operating system) argparse (argument parsing) re (regular expressions) json (create/process json files) tarball (create/process tarball files) h5py (create/process h5 files) TensorFlow (Deep Learning + Numerical Computing): TensorFlow TensorBoard (plotting) Keras (high-level TensorFlow API) TensorFlow-Agents (Reinforcement Learning in TensorFlow) PyTorch (Deep Learning + Numerical Computing): PyTorch TensorBoard (plotting) Torchvision (Computer Vision with PyTorch) Points3D (coming soon - 3D Computer Vision in PyTorch) OpenCV (Computer Vision) NumPy (Numerical Programming Package) Xvfb (Headless rendering) OpenAI Gym (Reinforcement Learning Simulations) car-racing Vizdoom Matplotlib (Matlab-based plotting functions) Pyglet (Graphics, animations, and applications) Pandas (Data Analysis, Processing, and Manipulation) SciPy (Scientific Programming Functions) Scikit-Learn (Supervised and unsupervised machine learning) Rospy (coming soon) General Programming Practices Miscellaneous Pomegranate Librosa pymed (coming soon) Shrink PDFs with command-line (coming soon) Performance Engineering: C++ Overview of C++ Roscpp (more coming soon) Performance Optimization for Machine Learning IDEs: PyCharm Vim Interpreters: Bash (coming soon) Jupyter/Jupytext Scientific Computing: Matlab Stata R (coming soon) *Julia Native Julia Gen (probabilistic programming) Web Development: HTML (coming soon) Server Side Includes (SSI) SSL Keys Nginx JavaScript NodeJS Node Package Manager (npm) PostGreSQL Online Tools: Digital Ocean Wix SquareSpace Cloud Computing and Containerization: Cloud Services: Amazon Web Services (AWS) Elastic Compute Cloud (EC2) Boto3 (Python EC2 API) S3 awscli (AWS command-line interface) Google Cloud Compute (GC2) Microsoft Azure (coming soon) MIT Satori (coming soon) MIT SuperCloud Docker Other Tools: Google Suite (Drive, Chrome) LaTeX GitHub Automated Emails (using Python) GitHub repository PowerPoint Labs (coming soon) Google Drive Remote tools (coming soon): Zoom (coming soon) AWW (whiteboard app) (coming soon) Anydesk (coming soon) Cocalc (coming soon) - link WebEx (coming soon) Skype (coming soon) Google Colab (coming soon) PuTTy (coming soon)","title":"Technical Tools Guide"},{"location":"#technical-concepts-guide","text":"Additionally, the latter component of this guide is meant to serve as a high-level resource/guide to concepts in: Artificial intelligence: Machine Learning Types of Learning: Supervised Learning Unsupervised Learning Neural Networks: General PyTorch Supervised Neural Network Training Process Computer Vision PyTorch Supervised Neural Network Training Process Deep generative Models - GANs + VAE Temporal Convolution Networks Machine Learning Domains: Computer Vision Reinforcement Learning Natural Language Processing Feature Engineering General AI: Adversarial Search Game Theory Constraint Satisfaction Problems (CSPs) Embodied Intelligence Robotics: Search Algorithms Particle Filtering SLAM *Probabilistic Inference: * Bayesian and Probabilistic Algorithms * Inference: ADVI, MCMC, GPs, Bayesian Optimization * Probabilistic Programming (using Gen ) Mathematics: Real analysis Fourier Analysis Linear Algebra (coming soon) Multivariable Calculus (coming soon) Differential Equations (coming soon) Computer Science: Algorithms and data structures Software construction (coming soon) Computer graphics (coming soon) Signal Processing: Deterministic and stochastic signal processing Filtering Fourier, Laplace, and Z-Transforms Electromagnetics (coming soon) Economics: Econometrics: Regression Techniques Inference Tests Data Types/Datasets in Econometrics Time Series Analysis Microeconomics Research, Management, and Operations: General topics in research Neural Network Diagram tool Peer Review techniques (coming soon) Computer Science Real Analysis Leadership (coming soon) Project Engineering System Dynamics and Systems Thinking DevOps Research Papers (for machine learning) Datasets (for machine learning) Other Topics: Giving Feedback Diversity and Inclusion \u201cThe Art of the Career\u201d","title":"Technical Concepts Guide"},{"location":"about/","text":"About This Guide This guide was born out of an effort to take better notes. Like most programmers, I've spent a lot more time resolving bugs than I wish I had, and I realized that part of the reason why was because I wasn't taking very good notes on the processes and techniques I was using. This guide is an effort to share the lessons I've learned with those interested, and hopefully is a way to help you with your endeavors and passions too! This guide is constantly being updated, but if you don't see a topic here that you'd like to, please feel free to email me at rmsander@mit.edu . Thank you!","title":"About"},{"location":"about/#about-this-guide","text":"This guide was born out of an effort to take better notes. Like most programmers, I've spent a lot more time resolving bugs than I wish I had, and I realized that part of the reason why was because I wasn't taking very good notes on the processes and techniques I was using. This guide is an effort to share the lessons I've learned with those interested, and hopefully is a way to help you with your endeavors and passions too! This guide is constantly being updated, but if you don't see a topic here that you'd like to, please feel free to email me at rmsander@mit.edu . Thank you!","title":"About This Guide"}]}